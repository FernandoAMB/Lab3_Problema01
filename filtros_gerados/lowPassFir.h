/*
 * Filter Coefficients (C Source) generated by the Filter Design and Analysis Tool
 * Generated by MATLAB(R) 9.2 and the Signal Processing Toolbox 7.4.
 * Generated on: 19-May-2018 19:03:07
 */

/*
 * Discrete-Time FIR Filter (real)
 * -------------------------------
 * Filter Structure  : Direct-Form FIR
 * Filter Length     : 31
 * Stable            : Yes
 * Linear Phase      : Yes (Type 2)
 *
 *
 * wpass = 0.3
 * wstop = 0.5
 * Apass = 1
 * Astop = 100
 * Coeficientes divididos por 4.
 */

/* General type conversion for MATLAB generated C-code  */
#include "tmwtypes.h"
#define FILTER_SIZE 31
/* 
 * Expected path to tmwtypes.h 
 * D:\Programas\MATLAB\extern\include\tmwtypes.h 
 */
/*
 * Warning - Filter coefficients were truncated to fit specified data type.  
 *   The resulting response may not match generated theoretical response.
 *   Use the Filter Design & Analysis Tool to design accurate
 *   int16 filter coefficients.
 */
const int BL = FILTER_SIZE;
DATA B[FILTER_SIZE] = {
                       1, -8, -55, -174, -332, -380, -157, 280, 545, 212, -624, -1120, -273, 2042, 4627, 5760, 4627, 2042, -273, -1120, -624, 212, 545, 280, -157, -380, -332, -174, -55, -8, 1
};

DATA buffer[FILTER_SIZE + 2];


void filter(DATA * samplesIn, ushort numSamples, DATA * out) {
    int i;
    for (i = 0; i < FILTER_SIZE + 2; i++) buffer[i] = 0; //limpando o buffer
    ushort overflowFlag = fir(samplesIn, B, out, buffer, numSamples, BL);
    printf("\nOverflow: %u\n", overflowFlag);
}
